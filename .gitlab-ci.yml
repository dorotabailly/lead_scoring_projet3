image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - deploy
  

.install-deps-template: &install-deps
  before_script:
    - pip install poetry
    - poetry --version
    - poetry config virtualenvs.in-project true
    - poetry install


build-docker-image:
  stage: build
  variables:
    IMAGE_NAME: eu.gcr.io/yotta-square-ml3/$CI_PROJECT_NAME:$CI_COMMIT_BRANCH-$CI_COMMIT_SHA
  script:
  - echo "$GITLAB_IAM_PRIVATE_KEY" > key.json
  - docker build . -t $IMAGE_NAME
  - docker login -u _json_key -p "$(cat key.json)" $IMAGE_NAME
  - docker push $IMAGE_NAME
  only :
    - develop
    - staging
    - master


unit-test:
  image: python:3.8.1
  stage: test
  script: 
    - pip3 install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - ls -la
    - export PYTHONPATH="$PYTHONPATH:$(pwd)"
    - echo $PYTHONPATH
    - pytest --cov-report term-missing --cov=src  | tee src/coverage/coverage.txt
    - coverage xml
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    reports:
      cobertura: coverage.xml
  only :
    - staging
    - develop


deploy to develop:
  stage: deploy
  image: google/cloud-sdk:latest
  script:
    - echo "$GITLAB_IAM_PRIVATE_KEY" > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud config set project yotta-square-ml3
    - gcloud config set compute/zone europe-west1-b
    - gcloud container clusters get-credentials chaos-cluster
    - kubectl config set-context $CI_COMMIT_BRANCH
    - cat deployment/deploy.yml | sed "s|{{ENVIRONMENT}}|$CI_COMMIT_BRANCH|g"| sed "s|{{CI_PROJECT_NAME}}|$CI_PROJECT_NAME|g" | sed "s|{{TAG}}|$CI_COMMIT_BRANCH-$CI_COMMIT_SHA|g"| kubectl apply -f -
    - cat deployment/load_balancer.yml | sed "s|{{ENVIRONMENT}}|$CI_COMMIT_BRANCH|g" | kubectl apply -f -
  only:
    - staging
    - master
